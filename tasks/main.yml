# vim:ft=ansible:
---

- name: Download Liquid Feedback Core {{lf_core_version}} source code
  get_url:
    url: http://www.public-software-group.org/pub/projects/liquid_feedback/backend/{{ lf_core_version }}/liquid_feedback_core-{{ lf_core_version }}.tar.gz
    dest: /tmp/lf_core.tgz

- name: Unarchive the source code
  unarchive:
    src: /tmp/lf_core.tgz
    dest: "{{ lf_home }}"
    copy: no
    creates: "{{ lf_core_dir }}/core.sql"

# Must install PG dev packages to compile lf_update
- name: Ensure APT package depenencies are installed
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - "postgresql-server-dev-{{ postgresql_version }}"

- name: Ensure lf_update binary is compiled
  shell: make
  args:
    chdir: "{{ lf_core_dir }}"
    creates: "{{ lf_core_dir }}/lf_update"

- name: Ensure crontab entry exists for lf_update
  cron:
    name: Update Liquid Feedback DB
    user: postgres
    job: "{{ lf_core_dir }}/lf_update dbname={{ lf_pg_db }}"
    minute: "*/{{ lf_core_update_freq }}"
    state: present

- name: Ensure crontab entry exists for lf_issue_order
  cron:
    name: Update Liquid Feedback Issue Order
    user: postgres
    job: "{{ lf_core_dir }}/lf_issue_order dbname={{ lf_pg_db }}"
    minute: "*/{{ lf_core_update_freq }}"
    state: present

- name: Ensure crontab entry exists for lf_suggestion_order
  cron:
    name: Update Liquid Feedback Suggestion Order
    user: postgres
    job: "{{ lf_core_dir }}/lf_suggestion_order dbname={{ lf_pg_db }}"
    minute: "*/{{ lf_core_update_freq }}"
    state: present
